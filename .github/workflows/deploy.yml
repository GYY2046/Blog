name: Blog CI/CD

on:

push:

branches:

- master # 只在master上push触发部署

paths-ignore: # 下列文件的变更不触发部署，可以自行添加


- LICENSE

jobs:

build-production:

runs-on: ubuntu-latest # 使用ubuntu系统镜像运行自动化脚本(温馨提示：和你所使用的操作系统及服务器系统无关，我本地用的windows10,云服务器用的centos)

strategy: (可选)

matrix:

node-version: [14.x] # 配置所需node版本

steps: # 自动化步骤
- uses: actions/checkout@v2
- name: Use Node.js ${{ matrix.node-version }}


uses: actions/setup-node@v1

with:

node-version: ${{ matrix.node-version }} #规定node.js版本(可不配置)


- name: Install dependencies # 第二步，安装依赖
run: npm install



- name: Build # 第三步，打包代码

run: npm run build


- name: Deploy to Server # 第四步，rsync推送文件

uses: AEnterprise/rsync-deploy@v1.0 # 使用别人包装好的步骤镜像

env:

DEPLOY_KEY: ${{ secrets.SERVER }} # 引用配置，SSH私钥

ARGS: -avz --delete --exclude='*.pyc' # rsync参数，排除.pyc文件

SERVER_PORT: '2046' # SSH端口

FOLDER: ./public/* # 要推送的文件夹，路径相对于代码仓库的根目录

SERVER_IP: ${{ secrets.SERVER_IP }} # 引用配置，服务器的host名（IP或者域名domain.com）

USERNAME: ${{ secrets.SERVER_NAME }} # 引用配置，服务器登录名

SERVER_DESTINATION: /usr/share/nginx/html/dist/ # 部署到目标文件夹



- name: Restart server # 第五步，重启服务

uses: appleboy/ssh-action@master

with:

host: ${{ secrets.SERVER_IP }} # 下面三个配置与上一步类似

username: ${{ secrets.SERVER_NAME }}

key: ${{ secrets.SERVER }}

# 重启的脚本，根据自身情况做相应改动，一般要做的是migrate数据库以及重启服务器

script: |

systemctl restart nginx
